{
  "name": "angular-masonry",
  "version": "0.13.0",
  "main": "angular-masonry.js",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-concat": "^0.5.1",
    "grunt-contrib-connect": "^0.11.2",
    "grunt-contrib-uglify": "^0.9.1",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-conventional-changelog": "^4.1.0",
    "grunt-karma": "^0.12.0",
    "grunt-ngmin": "0.0.3",
    "jasmine-core": "^2.2.0",
    "karma-coffee-preprocessor": "^0.3.0",
    "karma-jasmine": "^0.3.5",
    "karma-phantomjs-launcher": "^0.2.1",
    "load-grunt-tasks": "^3.1.0",
    "phantomjs": "^1.9.17"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/passy/angular-masonry.git"
  },
  "license": "MIT",
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "angular": "^1.4.1",
    "imagesloaded": "^3.1.8",
    "jquery-bridget": "^1.1.0",
    "masonry-layout": "^3.3.0"
  },
  "readme": "# AngularJS Masonry Directive [![Build Status](https://travis-ci.org/passy/angular-masonry.png)](https://travis-ci.org/passy/angular-masonry) [![Dependency Status](https://gemnasium.com/passy/angular-masonry.png)](https://gemnasium.com/passy/angular-masonry) [![Code Climate](https://codeclimate.com/github/passy/angular-masonry.png)](https://codeclimate.com/github/passy/angular-masonry)\n\n[Homepage](http://passy.github.io/angular-masonry)\n\nAn [AngularJS](http://angularjs.org/) directive to work with David Desandro's [Masonry](http://masonry.desandro.com/).\n\n## Usage\n\n1. Install via either [bower](http://bower.io/) or [npm](https://www.npmjs.com/):\n1a. `bower install --save angular-masonry`\n1b. `npm install --save angular-masonry`\n2. Add `wu.masonry` to your application's module dependencies.\n2. Include dependencies in your HTML.\n3. Use the `masonry` directive.\n\n## Example\n\nSee the [homepage](http://passy.github.io/angular-masonry) for a live example.\n\n```html\n<div masonry>\n    <div class=\"masonry-brick\" ng-repeat=\"brick in bricks\">\n        <img ng-src=\"{{ brick.src }}\" alt=\"A masonry brick\">\n    </div>\n</div>\n```\n\nYou have to include the `masonry` attribute on the element holding the bricks.\nThe bricks are registered at the directive through the `masonry-brick` CSS\nclassname.\n\nThe directive uses [`imagesloaded`](https://github.com/desandro/imagesloaded) to\ndetermine when all images within the `masonry-brick` have been loaded and adds\nthe `loaded` CSS class to the element, so you can add custom styles and\nprevent ghosting effects.\n\n## Attributes\n\n### `item-selector`\n\n(Default: `.masonry-brick`)\n\nYou can specify a different [item\nselector](http://masonry.desandro.com/options.html#itemselector) through the\n`item-selector` attribute. You still need to use `masonry-brick` either as class\nname or element attribute on sub-elements in order to register it to the\ndirective.\n\n*Example:*\n\n```html\n<masonry item-selector=\".mybrick\">\n    <div masonry-brick class=\"mybrick\">Unicorns</div>\n    <div masonry-brick class=\"mybrick\">Sparkles</div>\n</masonry>\n```\n\n### `column-width`\n\nThe `column-width` attribute allows you to override the [the width of a column\nof a horizontal grid](http://masonry.desandro.com/options.html#columnwidth). If\nnot set, Masonry will use the outer width of the first element.\n\n*Example:*\n\n```html\n<masonry column-width=\"200\">\n    <div class=\"masonry-brick\">This will be 200px wide max.</div>\n</masonry>\n```\n\n### `preserve-order`\n\nThe `preserve-order` attributes disables the `imagesLoaded` logic and will\ninstead display bricks by the order in the DOM instead of by the time they are\nloaded. Be aware that this can lead to visual glitches if the size of the\nelements isn't set at the time they are inserted.\n\n*Example:*\n\n```html\n<masonry preserve-order>\n    <div class=\"masonry-brick\"><img src=\"...\" alt=\"Will always be shown 1st\"></div>\n    <div class=\"masonry-brick\"><img src=\"...\" alt=\"Will always be shown 2nd\"></div>\n</masonry>\n```\n\n### `load-images`\n\nThis attribute defaults to `true` and allows to disable the use of `imagesLoaded`\naltogether, so you don't have to include the dependency if your masonry layout\ndoesn't actually make use of images.\n\n*Example:*\n\n```html\n<masonry load-images=\"false\">\n    <div class=\"masonry-brick\"><p>Only text.</p></div>\n    <div class=\"masonry-brick\"><p>And nothing but text.</p></div>\n</masonry>\n```\n\n### `reload-on-show`\n\nThe `reload-on-show` attribute triggers a reload when the masonry element (or an\nancestor element) is shown after being hidden, useful when using `ng-show` or \n`ng-hide`. Without this if the viewport is resized while the masonry element is \nhidden it may not render properly when shown again.\n\n*Example:*\n\n```html\n<masonry reload-on-show ng-show=\"showList\">\n    <div class=\"masonry-brick\">...</div>\n    <div class=\"masonry-brick\">...</div>\n</masonry>\n```\n\nWhen `showList` changes from falsey to truthy `ctrl.reload` will be called.\n\n\n### `reload-on-resize`\n\nThe `reload-on-resize` attribute triggers a reload when the masonry element changes\nits width, useful when only the parent element is resized (and not the window) and \nyou want the elements to be rearranged. Without this if the parent is resized then \nsome blank space may be left on the sides.\n\n*Example:*\n\n```html\n<masonry reload-on-resize>\n    <div class=\"masonry-brick\">...</div>\n    <div class=\"masonry-brick\">...</div>\n</masonry>\n```\n\n\n### `masonry-options`\n\nYou can provide [additional options](http://masonry.desandro.com/options.html)\nas expression either as `masonry` or `masonry-options` attribute.\n\n*Example:*\n\n```html\n<masonry masonry-options=\"{ transitionDuration: '0.4s' }\">\n</masonry>\n```\n\nEquivalent to:\n\n```html\n<div masonry=\"{ transitionDuration: '0.4s' }\">\n</div>\n```\n\n## Credits\n\nThe directive is based on\n[a StackOverflow question](http://stackoverflow.com/questions/16504151/masonry-with-angularjs)\nanswered by James Sharp.\n\n\n## Contributing\n\nPull requests welcome. Only change files in `src` and don't bump any versions.\nPlease respect the code style in place. Follow the\n[AngularJS commit guidelines](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format).\n\n## License\n\nMIT\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/passy/angular-masonry/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "description": "[Homepage](http://passy.github.io/angular-masonry)",
  "bugs": {
    "url": "https://github.com/passy/angular-masonry/issues"
  },
  "_id": "angular-masonry@0.13.0",
  "dist": {
    "shasum": "219cf922519a7d5cef83cd06db7059b7921c0050"
  },
  "_from": "angular-masonry@",
  "_resolved": "https://registry.npmjs.org/angular-masonry/-/angular-masonry-0.13.0.tgz"
}
